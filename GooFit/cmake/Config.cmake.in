@PACKAGE_INIT@

include("${CMAKE_CURRENT_LIST_DIR}/@TARGETS_EXPORT_NAME@.cmake")

macro(INITIALIZE_GOOFIT)
  find_package(CUDA 6.0 REQUIRED)
  set(GOOFIT_DEVICE CUDA)
  set(GOOFIT_HOST CPP)
  set(CUDA_SEPARABLE_COMPILATION ON)
  set (CMAKE_CXX_FLAGS "-g ${CMAKE_CXX_FLAGS}")
  find_package(ROOT REQUIRED COMPONENTS Minuit)
  include_directories(AFTER SYSTEM "${ROOT_INCLUDE_DIRS}")
  set(CUDA_NVCC_FLAGS "${CUDA_NVCC_FLAGS};--compiler-options;-Wall,-Wextra,-Werror=return-type,-g")
  SET(CUDA_NVCC_FLAGS "${CUDA_NVCC_FLAGS};-Xcicc;-O3;-Xptxas;-O3;-g;-lineinfo;-std=c++11")
  add_definitions("-DSEPARABLE")
  add_definitions("-DTHRUST_DEVICE_SYSTEM=THRUST_DEVICE_SYSTEM_CUDA")
  add_definitions("-DMCBOOSTER_BACKEND=CUDA")
  add_definitions("-DTHRUST_HOST_SYSTEM=THRUST_HOST_SYSTEM_CPP")
  cuda_select_nvcc_arch_flags(ARCH_FLAGS ${GOOFIT_ARCH})
  if(ARCH_FLAGS MATCHES "20|21|30|32")
    message(STATUS "Removing GPU Arch 3.5+ features")
  else()
    message(STATUS "Activating GPU Arch 3.5+ features")
    add_definitions("-DTARGET_SM35")
  endif()
  list(APPEND CUDA_NVCC_FLAGS ${ARCH_FLAGS})
  include_directories("${GOOFIT_INCLUDE_DIRS}")
endmacro()
set ( CUDA_ALL_SEPARABLE_COMPILATION_OBJECTS "@PACKAGE_CUDA_ALL_SEPARABLE_COMPILATION_OBJECTS@")
set_and_check ( GOOFIT_INCLUDE_DIRS "@PACKAGE_GOOFIT_INCLUDE_DIRS@")
set_and_check ( GOOFIT_LIBRARY_DIRS "@PACKAGE_GOOFIT_LIBRARIES@")
check_required_components("@PROJECT_NAME@")
